(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[442],{2706:function(t,n,e){(window.__NEXT_P=window.__NEXT_P||[]).push(["/projects/colorpicker",function(){return e(4354)}])},5098:function(t,n,e){"use strict";e.d(n,{Z:function(){return O}});var r=e(5893),a=e(7294),o=e(4184),l=e.n(o),i=e(7331),s=e.n(i);function u(t){var n=t.activeId,e=t.nodes;return(0,r.jsx)("ul",{className:s().list,children:e.map((function(t){return(0,r.jsxs)("li",{className:l()(s().entry,t.id===n&&s().active),children:[(0,r.jsx)("a",{href:"#".concat(t.id),children:t.text}),t.children.length>0&&(0,r.jsx)(u,{activeId:n,nodes:t.children})]},t.id)}))})}var c=e(3197),h=e.n(c);function p(t,n){var e=(0,a.useRef)({});(0,a.useEffect)((function(){var r=new IntersectionObserver((function(n){return function(t,n,e){var r=!0,a=!1,o=void 0;try{for(var l,i=n[Symbol.iterator]();!(r=(l=i.next()).done);r=!0){var s=l.value;t.current[s.target.id]=s}}catch(c){a=!0,o=c}finally{try{r||null==i.return||i.return()}finally{if(a)throw o}}var u=Object.values(t.current).filter((function(t){return t.isIntersecting}));u.length>0&&e(u[0].target.id)}(e,n,t)}),{rootMargin:"75px 0px 0px 0px"});return function(t,n){var e=!0,r=!1,a=void 0;try{for(var o,l=n[Symbol.iterator]();!(e=(o=l.next()).done);e=!0){var i=o.value;t.observe(i)}}catch(s){r=!0,a=s}finally{try{e||null==l.return||l.return()}finally{if(r)throw a}}}(r,n),function(){return r.disconnect()}}),[t,n])}var d=/^H([1-6])$/;function m(t){for(var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,e=[],r=0;r<t.length;r++){var a=t[r],o=a.tagName,l=a.innerText,i=a.id,s=d.exec(o);if(s){var u=parseInt(s[1]),c={children:[],id:i,text:l};if(u<n)return e;u===n&&(c.children=m(t.slice(r+1),n+1),e.push(c))}}return e}function b(t){return(0,a.useMemo)((function(){return m(t)}),[t])}function v(t){var n,e=t.children,o=(0,a.useState)(),l=o[0],i=o[1],s=(n=l,(0,a.useMemo)((function(){return n?Array.from(document.querySelectorAll("h1, h2, h3, h4, h5, h6")):[]}),[n])),c=(0,a.useState)(),d=c[0],m=c[1],v=b(s);return p(m,s),(0,r.jsxs)("div",{className:h().container,children:[(0,r.jsx)("div",{className:h().content,ref:function(t){return i(t)},children:e}),(0,r.jsx)("nav",{className:h().toc,"aria-label":"Table of contents",children:(0,r.jsx)(u,{activeId:d,nodes:v})})]})}var g=e(9100),f=e(1151),x=e(3483),_=e(4441);function j(t,n,e){return n in t?Object.defineProperty(t,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[n]=e,t}function y(t,n){if(null==t)return{};var e,r,a=function(t,n){if(null==t)return{};var e,r,a={},o=Object.keys(t);for(r=0;r<o.length;r++)e=o[r],n.indexOf(e)>=0||(a[e]=t[e]);return a}(t,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)e=o[r],n.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(t,e)&&(a[e]=t[e])}return a}function w(t){var n=t.className,e=t.children,a=y(t,["className","children"]),o=/language-(\w+)/.exec(n||"");return o?(0,r.jsx)(x.Z,{style:_.Z,language:o[1],children:e}):(0,r.jsx)("code",function(t){for(var n=1;n<arguments.length;n++){var e=null!=arguments[n]?arguments[n]:{},r=Object.keys(e);"function"===typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(e).filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})))),r.forEach((function(n){j(t,n,e[n])}))}return t}({},a,{children:e}))}var C=e(687),H=e.n(C);function O(t){var n=t.children,e=t.meta;return(0,r.jsx)(g.Z,{children:(0,r.jsxs)(v,{children:[(null===e||void 0===e?void 0:e.title)&&(0,r.jsx)("h1",{className:H().title,children:e.title}),(0,r.jsx)(f.Zo,{components:{code:w},children:n})]})})}},9100:function(t,n,e){"use strict";e.d(n,{Z:function(){return p}});var r=e(5893),a=e(7294),o=e(1664),l=e(4184),i=e.n(l),s=e(3219),u=e.n(s),c=e(1163),h=[{link:"/",text:"Home"},{link:"/about",text:"About"},{link:"/projects",text:"Projects"},{link:"/bits",text:"Bits"}];function p(t){var n=t.children,e=(0,a.useState)(!1),l=e[0],s=e[1],p=(0,c.useRouter)().asPath;return(0,a.useEffect)((function(){s(!1)}),[p]),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)("span",{className:u().navToggle,onClick:function(){s(!l)},children:[(0,r.jsx)("span",{}),(0,r.jsx)("span",{}),(0,r.jsx)("span",{})]}),(0,r.jsx)("nav",{className:u().nav,"data-open":l,children:h.map((function(t){return(0,r.jsx)(o.default,{href:t.link,children:(0,r.jsx)("a",{className:i()(p===t.link&&u().active),onClick:function(){return console.log("pressed")},children:t.text})},t.link)}))}),(0,r.jsx)("main",{children:n})]})}},4354:function(t,n,e){"use strict";e.r(n),e.d(n,{meta:function(){return l}});var r=e(5893),a=e(1151),o=e(5098),l={title:"HSV color picker"},i=function(t){var n=t.children;return(0,r.jsx)(o.Z,{meta:l,children:n})};n.default=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=function(){var n=Object.assign({p:"p",a:"a",h1:"h1",h2:"h2",pre:"pre",code:"code",strong:"strong"},(0,a.ah)(),t.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"I've created a HSV color picker, complete with color wheel. The color picker can also be switched to RGB seamlessly."}),"\n",(0,r.jsxs)(n.p,{children:["Checkout the ",(0,r.jsx)(n.a,{href:"/colors/picker",children:"color picker page"})," to actually use it."]}),"\n",(0,r.jsx)(n.h1,{id:"code",children:"Code"}),"\n",(0,r.jsx)(n.p,{children:"Sadly I cannot really link any code, as it is not on a repository, but here some snippets:"}),"\n",(0,r.jsx)(n.h2,{id:"get-hsv-values-based-on-x--y",children:"Get HSV values, based on X / Y"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"export default function getHSVForPositionOnWheel(\n\tx: number,\n\ty: number,\n\tradius: number,\n): [hue: number, saturation: number, value: number] {\n\tconst distance = Math.sqrt(x * x + y * y);\n\tconst radian = Math.atan2(y, x);\n\tconst degrees = ((radian + Math.PI) / (2 * Math.PI)) * 360;\n\n\treturn [degrees, distance / radius, 1];\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"color-utility",children:"Color utility"}),"\n",(0,r.jsxs)(n.p,{children:["Here is the color class with meany useful things in it. Feel free to use it for ",(0,r.jsx)(n.strong,{children:"educational purposes"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'export default class Color {\n\tpublic static readonly BLACK = new Color(0, 0, 0, 255);\n\tpublic static readonly WHITE = new Color(255, 255, 255, 255);\n\tpublic static readonly HEX_RGBA_REGEX = /#([0-9]|[a-f]){8}/i;\n\n\t/**\n\t * Creates a color from HSV\n\t * @param hue value from `0` to `360`\n\t * @param saturation value from `0` to `1`\n\t * @param value value from `0` to `1`\n\t * @param alpha value from `0` to `255`\n\t */\n\tpublic static fromHSV(\n\t\thue: number,\n\t\tsaturation: number,\n\t\tvalue: number,\n\t\talpha = 255,\n\t): Color {\n\t\tif (!this.isValidHSV(hue, saturation, value)) {\n\t\t\tthrow new Error(\n\t\t\t\t`HSV values hue: ${hue}, saturation: ${saturation} value: ${value} are incorrect`,\n\t\t\t);\n\t\t}\n\n\t\tconst chroma = saturation * value;\n\t\tconst hue1 = hue / 60;\n\t\tconst x = chroma * (1 - Math.abs((hue1 % 2) - 1));\n\t\tconst m = value - chroma;\n\n\t\tlet r1, g1, b1;\n\n\t\tif (hue1 >= 0 && hue1 <= 1) [r1, g1, b1] = [chroma, x, 0];\n\t\telse if (hue1 >= 1 && hue1 <= 2) [r1, g1, b1] = [x, chroma, 0];\n\t\telse if (hue1 >= 2 && hue1 <= 3) [r1, g1, b1] = [0, chroma, x];\n\t\telse if (hue1 >= 3 && hue1 <= 4) [r1, g1, b1] = [0, x, chroma];\n\t\telse if (hue1 >= 4 && hue1 <= 5) [r1, g1, b1] = [x, 0, chroma];\n\t\telse if (hue1 >= 5 && hue1 <= 6) [r1, g1, b1] = [chroma, 0, x];\n\t\telse [r1, g1, b1] = [0, 0, 0];\n\n\t\treturn new Color((r1 + m) * 255, (g1 + m) * 255, (b1 + m) * 255, alpha);\n\t}\n\t/**\n\t * Parses a hex rgba string to a color object. It also accepts values without\n\t * the alpha component.\n\t * @param value the string which should be parsed.\n\t */\n\tpublic static fromHexRgbA(value: string): Color {\n\t\tif (value.length === 7) value = value.padEnd(9, "FF");\n\n\t\tif (!Color.HEX_RGBA_REGEX.test(value))\n\t\t\tthrow new Error(`Opaque hex-rgb string "${value}" is invalid`);\n\n\t\tconst red = Color.parseHexColorComponent(value.slice(1, 3));\n\t\tconst green = Color.parseHexColorComponent(value.slice(3, 5));\n\t\tconst blue = Color.parseHexColorComponent(value.slice(5, 7));\n\t\tconst alpha = Color.parseHexColorComponent(value.slice(7, 9));\n\n\t\treturn new Color(red, green, blue, alpha);\n\t}\n\t/**\n\t * Checks if the provided HSV color is valid\n\t * @param hue value from `0` to `360`\n\t * @param saturation value from `0` to `1`\n\t * @param value value from `0` to `1`\n\t */\n\tpublic static isValidHSV(\n\t\thue: number,\n\t\tsaturation: number,\n\t\tvalue: number,\n\t): boolean {\n\t\treturn (\n\t\t\thue >= 0 &&\n\t\t\thue <= 360 &&\n\t\t\tsaturation >= 0 &&\n\t\t\tsaturation <= 1 &&\n\t\t\tvalue >= 0 &&\n\t\t\tvalue <= 1\n\t\t);\n\t}\n\t/**\n\t * Parses a color component into it\'s integer representation.\n\t * @param component Component to parse, eg `0F` or `00` or `12`.\n\t * @param which Optional parameter to enrich the error message with the\n\t * information of what component actually failed to parse.\n\t */\n\tpublic static parseHexColorComponent(\n\t\tcomponent: string,\n\t\twhich?: string,\n\t): number {\n\t\ttry {\n\t\t\treturn parseInt(component, 16);\n\t\t} catch {\n\t\t\tlet msg = `Failed to parse hex color comp "${component}".`;\n\n\t\t\tif (which !== undefined)\n\t\t\t\tmsg += ` Error occurred whilst parsing "${which}".`;\n\n\t\t\tthrow new Error(msg);\n\t\t}\n\t}\n\t/**\n\t * Generates a random color. Note that the opacity is **never** randomizes,\n\t * thus always opaque.\n\t * @returns A random color.\n\t */\n\tpublic static get random(): Color {\n\t\tconst random = () => Math.floor(Math.random() * 256);\n\n\t\treturn new Color(random(), random(), random(), 255);\n\t}\n\n\tprivate _red;\n\tprivate _green;\n\tprivate _blue;\n\tprivate _alpha;\n\n\t/**\n\t * Generates a new color object using RGBA\n\t * @param red Red component of the value `0` to `255`\n\t * @param green Green component of the value `0` to `255`\n\t * @param blue Blue component of the value `0` to `255`\n\t * @param alpha Alpha component of the value `0` to `255`\n\t */\n\tpublic constructor(red: number, green: number, blue: number, alpha: number) {\n\t\tthis._red = red;\n\t\tthis._green = green;\n\t\tthis._blue = blue;\n\t\tthis._alpha = alpha;\n\t}\n\n\tpublic get clone(): Color {\n\t\treturn new Color(...this.rgba);\n\t}\n\tpublic get red(): number {\n\t\treturn this._red;\n\t}\n\tpublic set red(val: number) {\n\t\tthis._red = val;\n\t}\n\tpublic setRed(val: number): Color {\n\t\tthis._red = val;\n\t\treturn this;\n\t}\n\tpublic get green(): number {\n\t\treturn this._green;\n\t}\n\tpublic set green(val: number) {\n\t\tthis._green = val;\n\t}\n\tpublic setGreen(val: number): Color {\n\t\tthis._green = val;\n\t\treturn this;\n\t}\n\tpublic get blue(): number {\n\t\treturn this._blue;\n\t}\n\tpublic set blue(val: number) {\n\t\tthis._blue = val;\n\t}\n\tpublic setBlue(val: number): Color {\n\t\tthis._blue = val;\n\t\treturn this;\n\t}\n\tpublic get alpha(): number {\n\t\treturn this._alpha;\n\t}\n\tpublic set alpha(val: number) {\n\t\tthis._alpha = val;\n\t}\n\tpublic setAlpha(val: number): Color {\n\t\tthis._alpha = val;\n\t\treturn this;\n\t}\n\t/**\n\t * Returns the hsva (hue, saturation, value, alpha) values of the color.\n\t *\n\t * @returns HSVA values. Note that the alpha values are normalized (`0` to\n\t * `1`), not `0` to `255`.\n\t */\n\tpublic get hsva(): [\n\t\thue: number,\n\t\tsaturation: number,\n\t\tvalue: number,\n\t\talpha: number,\n\t] {\n\t\tconst r = this._red / 255;\n\t\tconst g = this._green / 255;\n\t\tconst b = this._blue / 255;\n\t\tconst a = this._alpha / 255;\n\t\tconst compMax = Math.max(r, g, b);\n\t\tconst compMin = Math.min(r, g, b);\n\t\tconst delta = compMax - compMin;\n\n\t\tlet h: number;\n\t\tif (delta === 0) h = 0;\n\t\telse {\n\t\t\tswitch (compMax) {\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Invalid compMax: "${compMax}"`);\n\t\t\t\tcase r:\n\t\t\t\t\th = (g - b) / delta;\n\t\t\t\t\tbreak;\n\t\t\t\tcase g:\n\t\t\t\t\th = (b - r) / delta + 2;\n\t\t\t\t\tbreak;\n\t\t\t\tcase b:\n\t\t\t\t\th = (r - g) / delta + 4;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tconst v = compMax;\n\t\tconst s = v === 0 ? 0 : delta / v;\n\t\tconst clampedH = h % 6;\n\t\tconst normalizedH = clampedH < 0 ? clampedH + 6 : clampedH;\n\n\t\treturn [normalizedH * 60, s, v, a];\n\t}\n\t/**\n\t * @returns the RGBA representation of the color.\n\t *\n\t * Example: ```const [red, green, blue, alpha] = color.toRGBA()```\n\t */\n\tpublic get rgba(): [number, number, number, number] {\n\t\treturn [this._red, this._green, this._blue, this._alpha];\n\t}\n\t/**\n\t * Returns the hex string representation ignoring alpha. For example `red`\n\t * would be `#FF0000`.\n\t * @returns Hex string color representation ignoring alpha.\n\t */\n\tpublic get hexRgb(): string {\n\t\tconst { _red, _green, _blue, toHexDigit } = this;\n\n\t\treturn "#" + [_red, _green, _blue].map(toHexDigit).join("");\n\t}\n\t/**\n\t * Returns the hex string representation including alpha. For example `red`,\n\t * 50% transparent would be `#FF00007F`\n\t * @returns Hex string color representation including alpha.\n\t */\n\tpublic get hexRgba(): string {\n\t\tconst { _red, _green, _blue, _alpha, toHexDigit } = this;\n\n\t\treturn "#" + [_red, _green, _blue, _alpha].map(toHexDigit).join("");\n\t}\n\tpublic get isDark(): boolean {\n\t\t// "average"\n\t\tconst weightedAverage = Math.sqrt(\n\t\t\t0.299 * this._red * this._red +\n\t\t\t\t0.587 * this._green * this._green +\n\t\t\t\t0.114 * this._blue * this._blue,\n\t\t);\n\n\t\treturn weightedAverage < 127.5;\n\t}\n\n\t/**\n\t * Takes a number between `0` and `255` and converts it to hexadecimal.\n\t * @param n number between `0` and `255`\n\t */\n\tprivate toHexDigit(n: number): string {\n\t\treturn Math.trunc(n).toString(16).padStart(2, "0");\n\t}\n}\n'})})]})};return i?(0,r.jsx)(i,Object.assign({},t,{children:(0,r.jsx)(n,{})})):n()}},7331:function(t){t.exports={list:"tableOfContents_list__b8d6s",entry:"tableOfContents_entry__IfVwq",active:"tableOfContents_active__c_CsF"}},687:function(t){t.exports={title:"mdxPageLayout_title__J15LR"}},3219:function(t){t.exports={nav:"navBarLayout_nav__yApjk",active:"navBarLayout_active__WaOWi",navToggle:"navBarLayout_navToggle__5l697"}},3197:function(t){t.exports={container:"tableOfContentsLayout_container__EzUwh",toc:"tableOfContentsLayout_toc__ZjzLh",content:"tableOfContentsLayout_content__KYkIj"}}},function(t){t.O(0,[685,338,774,888,179],(function(){return n=2706,t(t.s=n);var n}));var n=t.O();_N_E=n}]);